#include <iostream>
#include <string>
#include <sstream>
#include <exception>
using namespace std;

class TooShortException : public exception {
    int len;
public:
    TooShortException(int l) : len(l) {}
    const char* what() const throw() {
        static string msg;
        msg = "Too short: " + to_string(len);
        return msg.c_str();
    }
};

class InvalidCharacterException : public exception {
public:
    const char* what() const throw() {
        return "Invalid";
    }
};

void validateName(const string& name) {
    if (name.length() < 3) {
        throw TooShortException(name.length());
    }
    for (char c : name) {
        if (!isalpha(c)) {
            throw InvalidCharacterException();
        }
    }
}

int main() {
    int n;
    cout << "Enter number of names: ";
    cin >> n;
    string name;

    cout << "Enter names: " << endl;
    for (int i = 0; i < n; i++) {
        cin >> name;
        try {
            validateName(name);
            cout << "Valid" << endl;
        } catch (TooShortException& e) {
            cout << e.what() << endl;
        } catch (InvalidCharacterException& e) {
            cout << e.what() << endl;
        }
    }

    return 0;
}
